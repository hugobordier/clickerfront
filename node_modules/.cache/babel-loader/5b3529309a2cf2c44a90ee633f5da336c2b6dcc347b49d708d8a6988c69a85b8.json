{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{incrementscore,checkmilestone}from\"../services/servicesjeu\";import{useNavigate}from\"react-router-dom\";import{useWindowSize}from'react-use';import Confetti from'react-confetti';import{calculateProofOfWork}from\"../utils/calculateProofOfWork\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export default function ModalECaptcha(_ref){let{onClose,captchaData}=_ref;const[captchaImg,setCaptchaImg]=useState(null);const[answer,setAnswer]=useState('');const[challenge_id,Setchallenge_id]=useState('');const[client_timestamp,setclient_timestamp]=useState('');const[tries,setTries]=useState(0);const[errorMsg,setErrorMsg]=useState(\"\");const navigate=useNavigate();const[showConfetti,setShowConfetti]=useState(false);const{width,height}=useWindowSize();useEffect(()=>{const fetchCaptcha=()=>{try{const{challenge_id,image_data,timestamp}=captchaData.challenge;setCaptchaImg(\"data:image/png;base64,\".concat(image_data));Setchallenge_id(String(challenge_id));setclient_timestamp(String(timestamp));setAnswer('');setErrorMsg('');setTries(0);}catch(error){console.error('Erreur lors de la récupération du captcha:',error);}};fetchCaptcha();},[captchaData]);const getnewcaptcha=async()=>{try{const newCaptcha=await checkmilestone();setCaptchaImg(\"data:image/png;base64,\".concat(newCaptcha.challenge.image_data));Setchallenge_id(String(newCaptcha.challenge.challenge_id));setclient_timestamp(String(newCaptcha.challenge.timestamp));setAnswer('');}catch(error){console.error(\"Erreur lors de la récupération d'un nouveau captcha:\",error);}};const handlecaptchavalue=async()=>{if(tries>=2){setErrorMsg(\"Tentatives de captcha épuisées.\");navigate('/');return;}try{const calculatedPoW=await calculateProofOfWork(challenge_id,4);const form={challenge_id,answer,client_timestamp,proof_of_work:calculatedPoW};console.log(\"Formulaire envoyé:\",form);const response=await incrementscore(form);console.log(\"Réponse du serveur:\",response);if(response.requires_verification===false){setShowConfetti(true);setTimeout(()=>{setShowConfetti(false);onClose();},6000);}else{const newTries=tries+1;setTries(newTries);if(newTries>=3){setErrorMsg(\"Tentatives de captcha épuisées.\");}else{setErrorMsg(\"Captcha incorrect, veuillez réessayer.\");await getnewcaptcha();}}}catch(error){var _error$response,_error$response2;const newTries=tries+1;setTries(newTries);console.error(\"Erreur complète:\",error);console.log(\"Détail backend:\",error===null||error===void 0?void 0:(_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data);alert(JSON.stringify(error===null||error===void 0?void 0:(_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.data,null,2));if(newTries>=3){setErrorMsg(\"Tentatives de captcha épuisées.\");}else{setErrorMsg(\"Erreur lors de la vérification du captcha, veuillez réessayer.\");await getnewcaptcha();}}};return/*#__PURE__*/_jsxs(_Fragment,{children:[showConfetti&&/*#__PURE__*/_jsx(Confetti,{width:width,height:height,gravity:0.5,style:{position:\"fixed\",top:0,left:0,pointerEvents:\"none\",zIndex:2000}}),/*#__PURE__*/_jsxs(\"div\",{style:{position:'fixed',top:'50%',left:'50%',transform:'translate(-50%, -50%)',backgroundColor:'#fff',padding:'20px',boxShadow:'0 4px 8px rgba(0,0,0,0.2)',zIndex:1001},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"V\\xE9rification eCaptcha\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Veuillez r\\xE9soudre le captcha pour continuer.\"}),/*#__PURE__*/_jsx(\"img\",{src:captchaImg||'/images/loading.png',alt:\"Captcha\",style:{width:'100%',height:'auto',marginBottom:'10px'}}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Votre r\\xE9ponse\",value:answer,onChange:e=>setAnswer(e.target.value),style:{width:'100%',padding:'8px',marginBottom:'10px'},disabled:tries>=3}),/*#__PURE__*/_jsx(\"div\",{style:{position:\"relative\"},children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>{void handlecaptchavalue();},style:{width:'100%',padding:'8px'},disabled:tries>=3,children:\"Valider\"})}),errorMsg&&/*#__PURE__*/_jsx(\"div\",{style:{color:'red',marginTop:10,textAlign:'center'},children:errorMsg})]})]});}","map":{"version":3,"names":["React","useState","useEffect","incrementscore","checkmilestone","useNavigate","useWindowSize","Confetti","calculateProofOfWork","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ModalECaptcha","_ref","onClose","captchaData","captchaImg","setCaptchaImg","answer","setAnswer","challenge_id","Setchallenge_id","client_timestamp","setclient_timestamp","tries","setTries","errorMsg","setErrorMsg","navigate","showConfetti","setShowConfetti","width","height","fetchCaptcha","image_data","timestamp","challenge","concat","String","error","console","getnewcaptcha","newCaptcha","handlecaptchavalue","calculatedPoW","form","proof_of_work","log","response","requires_verification","setTimeout","newTries","_error$response","_error$response2","data","alert","JSON","stringify","children","gravity","style","position","top","left","pointerEvents","zIndex","transform","backgroundColor","padding","boxShadow","src","alt","marginBottom","type","placeholder","value","onChange","e","target","disabled","onClick","color","marginTop","textAlign"],"sources":["/home/hugo/Documents/4A/cyber/front_url_parser/src/components/modalecaptcha.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { incrementscore, checkmilestone } from \"../services/servicesjeu\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useWindowSize } from 'react-use';\nimport Confetti from 'react-confetti';\nimport { calculateProofOfWork } from \"../utils/calculateProofOfWork\";\n\ntype Challenge = {\n  challenge_id: string;\n  image_data: string;\n  timestamp: string;\n};\n\ntype ModalECaptchaProps = {\n  onClose: () => void;\n  captchaData: { challenge: Challenge };\n};\n\nexport default function ModalECaptcha({ onClose, captchaData }: ModalECaptchaProps) {\n  const [captchaImg, setCaptchaImg] = useState<string | null>(null);\n  const [answer, setAnswer] = useState<string>('');\n  const [challenge_id, Setchallenge_id] = useState<string>('');\n  const [client_timestamp, setclient_timestamp] = useState<string>('');\n  const [tries, setTries] = useState(0);\n  const [errorMsg, setErrorMsg] = useState<string>(\"\");\n  const navigate = useNavigate();\n  const [showConfetti, setShowConfetti] = useState(false);\n  const { width, height } = useWindowSize();\n\n  useEffect(() => {\n    const fetchCaptcha = () => {\n      try {\n        const { challenge_id, image_data, timestamp } = captchaData.challenge;\n        setCaptchaImg(`data:image/png;base64,${image_data}`);\n        Setchallenge_id(String(challenge_id));\n        setclient_timestamp(String(timestamp));\n        setAnswer('');\n        setErrorMsg('');\n        setTries(0);\n      } catch (error) {\n        console.error('Erreur lors de la récupération du captcha:', error);\n      }\n    };\n    fetchCaptcha();\n  }, [captchaData]);\n\n  const getnewcaptcha = async () => {\n    try {\n      const newCaptcha = await checkmilestone();\n      setCaptchaImg(`data:image/png;base64,${newCaptcha.challenge.image_data}`);\n      Setchallenge_id(String(newCaptcha.challenge.challenge_id));\n      setclient_timestamp(String(newCaptcha.challenge.timestamp));\n      setAnswer('');\n    } catch (error) {\n      console.error(\"Erreur lors de la récupération d'un nouveau captcha:\", error);\n    }\n  };\n\n  const handlecaptchavalue = async () => {\n    if (tries >= 2) {\n      setErrorMsg(\"Tentatives de captcha épuisées.\");\n      navigate('/');\n      return;\n    }\n    try {\n      const calculatedPoW = await calculateProofOfWork(challenge_id, 4); \n      const form = {\n        challenge_id,\n        answer,\n        client_timestamp,\n        proof_of_work: calculatedPoW\n      };\n      console.log(\"Formulaire envoyé:\", form);\n      const response = await incrementscore(form);\n      console.log(\"Réponse du serveur:\", response);\n      if (response.requires_verification === false) {\n        setShowConfetti(true);\n        setTimeout(() => {\n          setShowConfetti(false);\n          onClose();\n        }, 6000);\n      } else {\n        const newTries = tries + 1;\n        setTries(newTries);\n        if (newTries >= 3) {\n          setErrorMsg(\"Tentatives de captcha épuisées.\");\n        } else {\n          setErrorMsg(\"Captcha incorrect, veuillez réessayer.\");\n          await getnewcaptcha();\n        }\n      }\n    } catch (error: any) {\n      const newTries = tries + 1;\n      setTries(newTries);\n      console.error(\"Erreur complète:\", error);\n      console.log(\"Détail backend:\", error?.response?.data);\n      alert(JSON.stringify(error?.response?.data, null, 2));\n      if (newTries >= 3) {\n        setErrorMsg(\"Tentatives de captcha épuisées.\");\n      } else {\n        setErrorMsg(\"Erreur lors de la vérification du captcha, veuillez réessayer.\");\n        await getnewcaptcha();\n      }\n    }\n  };\n\n  return (\n    <>\n      {showConfetti && (\n        <Confetti\n          width={width}\n          height={height}\n          gravity={0.5}\n          style={{\n            position: \"fixed\",\n            top: 0,\n            left: 0,\n            pointerEvents: \"none\",\n            zIndex: 2000,\n          }}\n        />\n      )}\n      <div\n        style={{\n          position: 'fixed',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n          backgroundColor: '#fff',\n          padding: '20px',\n          boxShadow: '0 4px 8px rgba(0,0,0,0.2)',\n          zIndex: 1001,\n        }}\n      >\n        <h2>Vérification eCaptcha</h2>\n        <p>Veuillez résoudre le captcha pour continuer.</p>\n        <img\n          src={captchaImg || '/images/loading.png'}\n          alt=\"Captcha\"\n          style={{ width: '100%', height: 'auto', marginBottom: '10px' }}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Votre réponse\"\n          value={answer}\n          onChange={e => setAnswer(e.target.value)}\n          style={{ width: '100%', padding: '8px', marginBottom: '10px' }}\n          disabled={tries >= 3}\n        />\n        <div style={{ position: \"relative\" }}>\n          <button\n            onClick={() => { void handlecaptchavalue(); }}\n            style={{ width: '100%', padding: '8px' }}\n            disabled={tries >= 3}\n          >\n            Valider\n          </button>\n        </div>\n        {errorMsg && (\n          <div style={{ color: 'red', marginTop: 10, textAlign: 'center' }}>\n            {errorMsg}\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,cAAc,CAAEC,cAAc,KAAQ,yBAAyB,CACxE,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,OAASC,aAAa,KAAQ,WAAW,CACzC,MAAO,CAAAC,QAAQ,KAAM,gBAAgB,CACrC,OAASC,oBAAoB,KAAQ,+BAA+B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAarE,cAAe,SAAS,CAAAC,aAAaA,CAAAC,IAAA,CAA+C,IAA9C,CAAEC,OAAO,CAAEC,WAAgC,CAAC,CAAAF,IAAA,CAChF,KAAM,CAACG,UAAU,CAAEC,aAAa,CAAC,CAAGnB,QAAQ,CAAgB,IAAI,CAAC,CACjE,KAAM,CAACoB,MAAM,CAAEC,SAAS,CAAC,CAAGrB,QAAQ,CAAS,EAAE,CAAC,CAChD,KAAM,CAACsB,YAAY,CAAEC,eAAe,CAAC,CAAGvB,QAAQ,CAAS,EAAE,CAAC,CAC5D,KAAM,CAACwB,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGzB,QAAQ,CAAS,EAAE,CAAC,CACpE,KAAM,CAAC0B,KAAK,CAAEC,QAAQ,CAAC,CAAG3B,QAAQ,CAAC,CAAC,CAAC,CACrC,KAAM,CAAC4B,QAAQ,CAAEC,WAAW,CAAC,CAAG7B,QAAQ,CAAS,EAAE,CAAC,CACpD,KAAM,CAAA8B,QAAQ,CAAG1B,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAC2B,YAAY,CAAEC,eAAe,CAAC,CAAGhC,QAAQ,CAAC,KAAK,CAAC,CACvD,KAAM,CAAEiC,KAAK,CAAEC,MAAO,CAAC,CAAG7B,aAAa,CAAC,CAAC,CAEzCJ,SAAS,CAAC,IAAM,CACd,KAAM,CAAAkC,YAAY,CAAGA,CAAA,GAAM,CACzB,GAAI,CACF,KAAM,CAAEb,YAAY,CAAEc,UAAU,CAAEC,SAAU,CAAC,CAAGpB,WAAW,CAACqB,SAAS,CACrEnB,aAAa,0BAAAoB,MAAA,CAA0BH,UAAU,CAAE,CAAC,CACpDb,eAAe,CAACiB,MAAM,CAAClB,YAAY,CAAC,CAAC,CACrCG,mBAAmB,CAACe,MAAM,CAACH,SAAS,CAAC,CAAC,CACtChB,SAAS,CAAC,EAAE,CAAC,CACbQ,WAAW,CAAC,EAAE,CAAC,CACfF,QAAQ,CAAC,CAAC,CAAC,CACb,CAAE,MAAOc,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,4CAA4C,CAAEA,KAAK,CAAC,CACpE,CACF,CAAC,CACDN,YAAY,CAAC,CAAC,CAChB,CAAC,CAAE,CAAClB,WAAW,CAAC,CAAC,CAEjB,KAAM,CAAA0B,aAAa,CAAG,KAAAA,CAAA,GAAY,CAChC,GAAI,CACF,KAAM,CAAAC,UAAU,CAAG,KAAM,CAAAzC,cAAc,CAAC,CAAC,CACzCgB,aAAa,0BAAAoB,MAAA,CAA0BK,UAAU,CAACN,SAAS,CAACF,UAAU,CAAE,CAAC,CACzEb,eAAe,CAACiB,MAAM,CAACI,UAAU,CAACN,SAAS,CAAChB,YAAY,CAAC,CAAC,CAC1DG,mBAAmB,CAACe,MAAM,CAACI,UAAU,CAACN,SAAS,CAACD,SAAS,CAAC,CAAC,CAC3DhB,SAAS,CAAC,EAAE,CAAC,CACf,CAAE,MAAOoB,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,sDAAsD,CAAEA,KAAK,CAAC,CAC9E,CACF,CAAC,CAED,KAAM,CAAAI,kBAAkB,CAAG,KAAAA,CAAA,GAAY,CACrC,GAAInB,KAAK,EAAI,CAAC,CAAE,CACdG,WAAW,CAAC,iCAAiC,CAAC,CAC9CC,QAAQ,CAAC,GAAG,CAAC,CACb,OACF,CACA,GAAI,CACF,KAAM,CAAAgB,aAAa,CAAG,KAAM,CAAAvC,oBAAoB,CAACe,YAAY,CAAE,CAAC,CAAC,CACjE,KAAM,CAAAyB,IAAI,CAAG,CACXzB,YAAY,CACZF,MAAM,CACNI,gBAAgB,CAChBwB,aAAa,CAAEF,aACjB,CAAC,CACDJ,OAAO,CAACO,GAAG,CAAC,oBAAoB,CAAEF,IAAI,CAAC,CACvC,KAAM,CAAAG,QAAQ,CAAG,KAAM,CAAAhD,cAAc,CAAC6C,IAAI,CAAC,CAC3CL,OAAO,CAACO,GAAG,CAAC,qBAAqB,CAAEC,QAAQ,CAAC,CAC5C,GAAIA,QAAQ,CAACC,qBAAqB,GAAK,KAAK,CAAE,CAC5CnB,eAAe,CAAC,IAAI,CAAC,CACrBoB,UAAU,CAAC,IAAM,CACfpB,eAAe,CAAC,KAAK,CAAC,CACtBhB,OAAO,CAAC,CAAC,CACX,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,IAAM,CACL,KAAM,CAAAqC,QAAQ,CAAG3B,KAAK,CAAG,CAAC,CAC1BC,QAAQ,CAAC0B,QAAQ,CAAC,CAClB,GAAIA,QAAQ,EAAI,CAAC,CAAE,CACjBxB,WAAW,CAAC,iCAAiC,CAAC,CAChD,CAAC,IAAM,CACLA,WAAW,CAAC,wCAAwC,CAAC,CACrD,KAAM,CAAAc,aAAa,CAAC,CAAC,CACvB,CACF,CACF,CAAE,MAAOF,KAAU,CAAE,KAAAa,eAAA,CAAAC,gBAAA,CACnB,KAAM,CAAAF,QAAQ,CAAG3B,KAAK,CAAG,CAAC,CAC1BC,QAAQ,CAAC0B,QAAQ,CAAC,CAClBX,OAAO,CAACD,KAAK,CAAC,kBAAkB,CAAEA,KAAK,CAAC,CACxCC,OAAO,CAACO,GAAG,CAAC,iBAAiB,CAAER,KAAK,SAALA,KAAK,kBAAAa,eAAA,CAALb,KAAK,CAAES,QAAQ,UAAAI,eAAA,iBAAfA,eAAA,CAAiBE,IAAI,CAAC,CACrDC,KAAK,CAACC,IAAI,CAACC,SAAS,CAAClB,KAAK,SAALA,KAAK,kBAAAc,gBAAA,CAALd,KAAK,CAAES,QAAQ,UAAAK,gBAAA,iBAAfA,gBAAA,CAAiBC,IAAI,CAAE,IAAI,CAAE,CAAC,CAAC,CAAC,CACrD,GAAIH,QAAQ,EAAI,CAAC,CAAE,CACjBxB,WAAW,CAAC,iCAAiC,CAAC,CAChD,CAAC,IAAM,CACLA,WAAW,CAAC,gEAAgE,CAAC,CAC7E,KAAM,CAAAc,aAAa,CAAC,CAAC,CACvB,CACF,CACF,CAAC,CAED,mBACEhC,KAAA,CAAAE,SAAA,EAAA+C,QAAA,EACG7B,YAAY,eACXtB,IAAA,CAACH,QAAQ,EACP2B,KAAK,CAAEA,KAAM,CACbC,MAAM,CAAEA,MAAO,CACf2B,OAAO,CAAE,GAAI,CACbC,KAAK,CAAE,CACLC,QAAQ,CAAE,OAAO,CACjBC,GAAG,CAAE,CAAC,CACNC,IAAI,CAAE,CAAC,CACPC,aAAa,CAAE,MAAM,CACrBC,MAAM,CAAE,IACV,CAAE,CACH,CACF,cACDxD,KAAA,QACEmD,KAAK,CAAE,CACLC,QAAQ,CAAE,OAAO,CACjBC,GAAG,CAAE,KAAK,CACVC,IAAI,CAAE,KAAK,CACXG,SAAS,CAAE,uBAAuB,CAClCC,eAAe,CAAE,MAAM,CACvBC,OAAO,CAAE,MAAM,CACfC,SAAS,CAAE,2BAA2B,CACtCJ,MAAM,CAAE,IACV,CAAE,CAAAP,QAAA,eAEFnD,IAAA,OAAAmD,QAAA,CAAI,0BAAqB,CAAI,CAAC,cAC9BnD,IAAA,MAAAmD,QAAA,CAAG,iDAA4C,CAAG,CAAC,cACnDnD,IAAA,QACE+D,GAAG,CAAEtD,UAAU,EAAI,qBAAsB,CACzCuD,GAAG,CAAC,SAAS,CACbX,KAAK,CAAE,CAAE7B,KAAK,CAAE,MAAM,CAAEC,MAAM,CAAE,MAAM,CAAEwC,YAAY,CAAE,MAAO,CAAE,CAChE,CAAC,cACFjE,IAAA,UACEkE,IAAI,CAAC,MAAM,CACXC,WAAW,CAAC,kBAAe,CAC3BC,KAAK,CAAEzD,MAAO,CACd0D,QAAQ,CAAEC,CAAC,EAAI1D,SAAS,CAAC0D,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CACzCf,KAAK,CAAE,CAAE7B,KAAK,CAAE,MAAM,CAAEqC,OAAO,CAAE,KAAK,CAAEI,YAAY,CAAE,MAAO,CAAE,CAC/DO,QAAQ,CAAEvD,KAAK,EAAI,CAAE,CACtB,CAAC,cACFjB,IAAA,QAAKqD,KAAK,CAAE,CAAEC,QAAQ,CAAE,UAAW,CAAE,CAAAH,QAAA,cACnCnD,IAAA,WACEyE,OAAO,CAAEA,CAAA,GAAM,CAAE,IAAK,CAAArC,kBAAkB,CAAC,CAAC,CAAE,CAAE,CAC9CiB,KAAK,CAAE,CAAE7B,KAAK,CAAE,MAAM,CAAEqC,OAAO,CAAE,KAAM,CAAE,CACzCW,QAAQ,CAAEvD,KAAK,EAAI,CAAE,CAAAkC,QAAA,CACtB,SAED,CAAQ,CAAC,CACN,CAAC,CACLhC,QAAQ,eACPnB,IAAA,QAAKqD,KAAK,CAAE,CAAEqB,KAAK,CAAE,KAAK,CAAEC,SAAS,CAAE,EAAE,CAAEC,SAAS,CAAE,QAAS,CAAE,CAAAzB,QAAA,CAC9DhC,QAAQ,CACN,CACN,EACE,CAAC,EACN,CAAC,CAEP","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}