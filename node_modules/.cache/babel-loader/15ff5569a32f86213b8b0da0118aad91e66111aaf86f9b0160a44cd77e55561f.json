{"ast":null,"code":"import { api } from \"./api\";\nexport const login = async form => {\n  var _response$data;\n  const response = await api.post(\"/auth/login\", {\n    username: form.username,\n    password: form.password\n  });\n  const accessToken = (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.access_token;\n  if (typeof accessToken === \"string\") {\n    localStorage.setItem(\"accessToken\", accessToken);\n  } else {\n    throw new Error(\"Jeton d'accès invalide reçu du serveur.\");\n  }\n  return response.data;\n};","map":{"version":3,"names":["api","login","form","_response$data","response","post","username","password","accessToken","data","access_token","localStorage","setItem","Error"],"sources":["/home/hugo/Documents/4A/cyber/front_url_parser/src/services/auth.ts"],"sourcesContent":["import { api } from \"./api\";\n\ntype LoginResponse = {\n  access_token: string;\n  [key: string]: unknown; \n};\n\nexport const login = async (\n  form: { username: string; password: string }\n): Promise<LoginResponse> => {\n  const response = await api.post<LoginResponse>(\"/auth/login\", {\n    username: form.username,\n    password: form.password,\n  });\n\n  const accessToken = response.data?.access_token;\n  if (typeof accessToken === \"string\") {\n    localStorage.setItem(\"accessToken\", accessToken);\n  } else {\n    throw new Error(\"Jeton d'accès invalide reçu du serveur.\");\n  }\n\n  return response.data;\n};\n"],"mappings":"AAAA,SAASA,GAAG,QAAQ,OAAO;AAO3B,OAAO,MAAMC,KAAK,GAAG,MACnBC,IAA4C,IACjB;EAAA,IAAAC,cAAA;EAC3B,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAgB,aAAa,EAAE;IAC5DC,QAAQ,EAAEJ,IAAI,CAACI,QAAQ;IACvBC,QAAQ,EAAEL,IAAI,CAACK;EACjB,CAAC,CAAC;EAEF,MAAMC,WAAW,IAAAL,cAAA,GAAGC,QAAQ,CAACK,IAAI,cAAAN,cAAA,uBAAbA,cAAA,CAAeO,YAAY;EAC/C,IAAI,OAAOF,WAAW,KAAK,QAAQ,EAAE;IACnCG,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEJ,WAAW,CAAC;EAClD,CAAC,MAAM;IACL,MAAM,IAAIK,KAAK,CAAC,yCAAyC,CAAC;EAC5D;EAEA,OAAOT,QAAQ,CAACK,IAAI;AACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}