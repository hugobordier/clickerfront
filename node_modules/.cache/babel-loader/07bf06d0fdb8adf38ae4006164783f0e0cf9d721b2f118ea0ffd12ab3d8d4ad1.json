{"ast":null,"code":"import{api}from\"./api\";export const login=async form=>{var _response$data;const response=await api.post(\"/auth/login\",{username:form.username,password:form.password});const accessToken=(_response$data=response.data)===null||_response$data===void 0?void 0:_response$data.access_token;if(typeof accessToken===\"string\"){localStorage.setItem(\"accessToken\",accessToken);}else{throw new Error(\"Jeton d'accès invalide reçu du serveur.\");}return response.data;};","map":{"version":3,"names":["api","login","form","_response$data","response","post","username","password","accessToken","data","access_token","localStorage","setItem","Error"],"sources":["/home/hugo/Documents/4A/cyber/front_url_parser/src/services/auth.ts"],"sourcesContent":["import { api } from \"./api\";\n\ntype LoginResponse = {\n  access_token: string;\n  [key: string]: unknown; \n};\n\nexport const login = async (\n  form: { username: string; password: string }\n): Promise<LoginResponse> => {\n  const response = await api.post<LoginResponse>(\"/auth/login\", {\n    username: form.username,\n    password: form.password,\n  });\n\n  const accessToken = response.data?.access_token;\n  if (typeof accessToken === \"string\") {\n    localStorage.setItem(\"accessToken\", accessToken);\n  } else {\n    throw new Error(\"Jeton d'accès invalide reçu du serveur.\");\n  }\n\n  return response.data;\n};\n"],"mappings":"AAAA,OAASA,GAAG,KAAQ,OAAO,CAO3B,MAAO,MAAM,CAAAC,KAAK,CAAG,KACnB,CAAAC,IAA4C,EACjB,KAAAC,cAAA,CAC3B,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAJ,GAAG,CAACK,IAAI,CAAgB,aAAa,CAAE,CAC5DC,QAAQ,CAAEJ,IAAI,CAACI,QAAQ,CACvBC,QAAQ,CAAEL,IAAI,CAACK,QACjB,CAAC,CAAC,CAEF,KAAM,CAAAC,WAAW,EAAAL,cAAA,CAAGC,QAAQ,CAACK,IAAI,UAAAN,cAAA,iBAAbA,cAAA,CAAeO,YAAY,CAC/C,GAAI,MAAO,CAAAF,WAAW,GAAK,QAAQ,CAAE,CACnCG,YAAY,CAACC,OAAO,CAAC,aAAa,CAAEJ,WAAW,CAAC,CAClD,CAAC,IAAM,CACL,KAAM,IAAI,CAAAK,KAAK,CAAC,yCAAyC,CAAC,CAC5D,CAEA,MAAO,CAAAT,QAAQ,CAACK,IAAI,CACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}