{"ast":null,"code":"import { api } from '../services/api';\nexport const incrementscore = async (data = {}) => {\n  try {\n    if (data && Object.keys(data).length > 0) {\n      // Si data existe et n'est pas vide, on l'envoie\n      const response = await api.post('/auth/increment-score', data);\n      return response.data;\n    } else {\n      // Sinon, on fait un post sans body\n      const response = await api.post('/auth/increment-score');\n      return response.data;\n    }\n  } catch (error) {\n    var _error$response;\n    console.error(\"erreur lors de l'incrémentation du score\", error);\n    throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || {\n      message: \"erreur lors de l'incrémentation du score\"\n    };\n  }\n};\n\n// export const verifcaptchavalue=async (challengeid:string,answer:string,client_timestamp:string,proof_of_work:string)=>{\n//   try {\n//     const data = {\n//       challengeid,\n//       answer,\n//       client_timestamp,\n//       proof_of_work\n//     };\n//     const response = await api.post('/auth/check-human', data);\n//     return response.data;\n//   } catch (error:any) {\n//     console.error(\"Erreur lors de l'obtention du captcha\", error);\n//     throw(error.response?.data || {message: \"Erreur lors de l'obtention du captcha\"});\n//   }\n// }\n\nexport const checkmilestone = async () => {\n  try {\n    const response = await api.get('/auth/check-milestone');\n    return response.data;\n  } catch (error) {\n    var _error$response2;\n    console.error(\"Erreur lors de la vérification du jalon\", error);\n    throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || {\n      message: \"Erreur lors de la vérification du jalon\"\n    };\n  }\n};","map":{"version":3,"names":["api","incrementscore","data","Object","keys","length","response","post","error","_error$response","console","message","checkmilestone","get","_error$response2"],"sources":["/home/hugo/Documents/4A/cyber/front_url_parser/src/services/servicesjeu.ts"],"sourcesContent":["import { api } from '../services/api';\n\n\nexport const incrementscore = async (data: any = {}) => {\n try {\n    if (data && Object.keys(data).length > 0) {\n      // Si data existe et n'est pas vide, on l'envoie\n      const response = await api.post('/auth/increment-score', data);\n      return response.data;\n    } else {\n      // Sinon, on fait un post sans body\n      const response = await api.post('/auth/increment-score');\n      return response.data;\n    }\n  } catch (error: any) {\n    console.error(\"erreur lors de l'incrémentation du score\", error);\n    throw error.response?.data || { message: \"erreur lors de l'incrémentation du score\" };\n  }\n};\n\n\n// export const verifcaptchavalue=async (challengeid:string,answer:string,client_timestamp:string,proof_of_work:string)=>{\n//   try {\n//     const data = {\n//       challengeid,\n//       answer,\n//       client_timestamp,\n//       proof_of_work\n//     };\n//     const response = await api.post('/auth/check-human', data);\n//     return response.data;\n//   } catch (error:any) {\n//     console.error(\"Erreur lors de l'obtention du captcha\", error);\n//     throw(error.response?.data || {message: \"Erreur lors de l'obtention du captcha\"});\n//   }\n// }\n\nexport const checkmilestone=async ()=>{\n  try {\n    const response = await api.get('/auth/check-milestone');\n    return response.data;\n  } catch (error:any) {\n    console.error(\"Erreur lors de la vérification du jalon\", error);\n    throw(error.response?.data || {message: \"Erreur lors de la vérification du jalon\"});\n  }\n}"],"mappings":"AAAA,SAASA,GAAG,QAAQ,iBAAiB;AAGrC,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAOC,IAAS,GAAG,CAAC,CAAC,KAAK;EACvD,IAAI;IACD,IAAIA,IAAI,IAAIC,MAAM,CAACC,IAAI,CAACF,IAAI,CAAC,CAACG,MAAM,GAAG,CAAC,EAAE;MACxC;MACA,MAAMC,QAAQ,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,uBAAuB,EAAEL,IAAI,CAAC;MAC9D,OAAOI,QAAQ,CAACJ,IAAI;IACtB,CAAC,MAAM;MACL;MACA,MAAMI,QAAQ,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,uBAAuB,CAAC;MACxD,OAAOD,QAAQ,CAACJ,IAAI;IACtB;EACF,CAAC,CAAC,OAAOM,KAAU,EAAE;IAAA,IAAAC,eAAA;IACnBC,OAAO,CAACF,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;IAChE,MAAM,EAAAC,eAAA,GAAAD,KAAK,CAACF,QAAQ,cAAAG,eAAA,uBAAdA,eAAA,CAAgBP,IAAI,KAAI;MAAES,OAAO,EAAE;IAA2C,CAAC;EACvF;AACF,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,cAAc,GAAC,MAAAA,CAAA,KAAU;EACpC,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMN,GAAG,CAACa,GAAG,CAAC,uBAAuB,CAAC;IACvD,OAAOP,QAAQ,CAACJ,IAAI;EACtB,CAAC,CAAC,OAAOM,KAAS,EAAE;IAAA,IAAAM,gBAAA;IAClBJ,OAAO,CAACF,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;IAC/D,MAAM,EAAAM,gBAAA,GAAAN,KAAK,CAACF,QAAQ,cAAAQ,gBAAA,uBAAdA,gBAAA,CAAgBZ,IAAI,KAAI;MAACS,OAAO,EAAE;IAAyC,CAAC;EACpF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}