{"ast":null,"code":"var _jsxFileName = \"/home/hugo/Documents/4A/cyber/front_url_parser/src/components/Pagejeu.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Pagejeu = () => {\n  _s();\n  const containerRef = useRef(null); //ref vers le div contenant l'animation\n  const imgRef = useRef(null); //ref vers l'image à déplacer\n  const {\n    widthitems,\n    heightitems\n  } = {\n    widthitems: 60,\n    heightitems: 40\n  };\n  const [startPos] = useState(() => getRandomxy(widthitems, heightitems));\n  const [pos, setPos] = useState(startPos);\n  const [dir, setDir] = useState({\n    dx: 2,\n    dy: 2\n  });\n  const [cocaPos] = useState(() => getRandomxy(widthitems, heightitems));\n  const [mcsmartPos] = useState(() => getRandomxy(widthitems, heightitems));\n  const [staticimages, setstaticimages] = useState([]);\n  const [nextID, setNextID] = useState(0);\n  useEffect(() => {\n    let animationFrame;\n    const move = () => {\n      const container = containerRef.current;\n      const img = imgRef.current;\n      if (container && img) {\n        const containerRect = container.getBoundingClientRect();\n        const imgRect = img.getBoundingClientRect();\n        let newX = pos.x + dir.dx;\n        let newY = pos.y + dir.dy;\n        let newDx = dir.dx;\n        let newDy = dir.dy;\n\n        // inverser la direction quand on atteint un bord\n        if (newX <= 0 || newX + imgRect.width >= containerRect.width) {\n          newDx *= -1;\n        }\n        if (newY <= 0 || newY + imgRect.height >= containerRect.height) {\n          newDy *= -1;\n        }\n        setPos({\n          x: newX,\n          y: newY\n        });\n        setDir({\n          dx: newDx,\n          dy: newDy\n        });\n      }\n      animationFrame = requestAnimationFrame(move);\n    };\n    animationFrame = requestAnimationFrame(move);\n    return () => cancelAnimationFrame(animationFrame);\n  }, [pos, dir]);\n  useEffect(() => {\n    const imageSources = ['/images/coca.jpg', '/images/biere.png', '/images/mcsmart.jpg'];\n    const intervalle = setInterval(() => {\n      const pos = getRandomxy(widthitems, heightitems);\n      const randomimages = imageSources[Math.floor(Math.random() * imageSources.length)];\n      const newImage = {\n        x: pos.x,\n        y: pos.y,\n        id: nextID,\n        src: randomimages\n      };\n      setstaticimages(prev => [...prev, newImage]);\n      setNextID(id => id + 1);\n    }, 3000);\n    return () => clearInterval(intervalle);\n  }, []);\n  function getRandomxy(width, height) {\n    const x = Math.floor(Math.random() * (window.innerWidth - width));\n    const y = Math.floor(Math.random() * (window.innerHeight - height));\n    return {\n      x,\n      y\n    };\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    style: {\n      width: '100vw',\n      height: '100vh',\n      backgroundColor: '#000',\n      overflow: 'hidden',\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      ref: imgRef,\n      src: \"/images/biere.png\",\n      alt: \"bi\\xE8re\",\n      style: {\n        position: 'absolute',\n        top: pos.y,\n        left: pos.x,\n        width: widthitems,\n        height: heightitems\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), staticimages.map(img => /*#__PURE__*/_jsxDEV(\"img\", {\n      src: img.src,\n      style: {\n        position: 'absolute',\n        top: img.y,\n        left: img.x,\n        width: widthitems,\n        height: heightitems\n      }\n    }, img.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 3\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(Pagejeu, \"LAo3sxmKcSBn7CUPFAmDQhF3I+0=\");\n_c = Pagejeu;\nexport default Pagejeu;\nvar _c;\n$RefreshReg$(_c, \"Pagejeu\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","Pagejeu","_s","containerRef","imgRef","widthitems","heightitems","startPos","getRandomxy","pos","setPos","dir","setDir","dx","dy","cocaPos","mcsmartPos","staticimages","setstaticimages","nextID","setNextID","animationFrame","move","container","current","img","containerRect","getBoundingClientRect","imgRect","newX","x","newY","y","newDx","newDy","width","height","requestAnimationFrame","cancelAnimationFrame","imageSources","intervalle","setInterval","randomimages","Math","floor","random","length","newImage","id","src","prev","clearInterval","window","innerWidth","innerHeight","ref","style","backgroundColor","overflow","position","children","alt","top","left","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["/home/hugo/Documents/4A/cyber/front_url_parser/src/components/Pagejeu.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\n\nconst Pagejeu = () => {\n  const containerRef = useRef<HTMLDivElement>(null);//ref vers le div contenant l'animation\n  const imgRef = useRef<HTMLImageElement>(null);//ref vers l'image à déplacer\n  const{widthitems,heightitems}={widthitems:60,heightitems:40};\n  const [startPos] = useState(() => getRandomxy(widthitems, heightitems));\n  const [pos, setPos] = useState(startPos);\n  const [dir, setDir] = useState({ dx: 2, dy: 2 });\n  const [cocaPos] = useState(() => getRandomxy(widthitems, heightitems));\n  const [mcsmartPos] = useState(() => getRandomxy(widthitems, heightitems));\n  const [staticimages,setstaticimages]= useState<{x:number;y:number,id:number,src:string}[]>([]);\n  const [nextID, setNextID] = useState(0);\n\n  useEffect(() => {\n    let animationFrame: number;\n\n    const move = () => {\n      const container = containerRef.current;\n      const img = imgRef.current;\n\n      if (container && img) {\n        const containerRect = container.getBoundingClientRect();\n        const imgRect = img.getBoundingClientRect();\n\n        let newX = pos.x + dir.dx;\n        let newY = pos.y + dir.dy;\n        let newDx = dir.dx;\n        let newDy = dir.dy;\n\n        // inverser la direction quand on atteint un bord\n        if (newX <= 0 || newX + imgRect.width >= containerRect.width) {\n          newDx *= -1;\n        }\n        if (newY <= 0 || newY + imgRect.height >= containerRect.height) {\n          newDy *= -1;\n        }\n\n        setPos({ x: newX, y: newY });\n        setDir({ dx: newDx, dy: newDy });\n      }\n\n      animationFrame = requestAnimationFrame(move);\n    };\n\n    animationFrame = requestAnimationFrame(move);\n    return () => cancelAnimationFrame(animationFrame);\n  }, [pos, dir]);\n\n  useEffect(() => {\n    const imageSources = [\n      '/images/coca.jpg',\n      '/images/biere.png',\n      '/images/mcsmart.jpg',\n    ];\n\n    const intervalle = setInterval(() => {\n      const pos = getRandomxy(widthitems, heightitems);\n      const randomimages = imageSources[Math.floor(Math.random() * imageSources.length)];\n\n      const newImage = {\n        x: pos.x,\n        y: pos.y,\n        id: nextID,\n        src: randomimages,\n      };\n\n      setstaticimages((prev) => [...prev, newImage]);\n      setNextID((id) => id + 1);\n    }, 3000);\n\n    return () => clearInterval(intervalle);\n  }, []);\n\n\n  function getRandomxy(width:number,height:number){\n    const x= Math.floor(Math.random() * (window.innerWidth - width));\n    const y = Math.floor(Math.random() * (window.innerHeight - height));\n    return {x,y};\n  }\n\n  return (\n    \n    <div\n      ref={containerRef}\n      style={{\n        width: '100vw',\n        height: '100vh',\n        backgroundColor: '#000',\n        overflow: 'hidden',\n        position: 'relative',\n      }}\n    >\n      <img\n        ref={imgRef}\n        src=\"/images/biere.png\"\n        alt=\"bière\"\n        style={{\n          position: 'absolute',\n          top: pos.y,\n          left: pos.x,\n          width: widthitems,\n          height: heightitems,\n        }}\n      />\n      {staticimages.map((img) => (\n  <img\n    key={img.id}\n    src={img.src}\n    style={{\n      position: 'absolute',\n      top: img.y,\n      left: img.x,\n      width: widthitems,\n      height: heightitems,\n    }}\n  />\n))}\n    </div>\n  );\n\n};\n\nexport default Pagejeu;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,YAAY,GAAGP,MAAM,CAAiB,IAAI,CAAC,CAAC;EAClD,MAAMQ,MAAM,GAAGR,MAAM,CAAmB,IAAI,CAAC,CAAC;EAC9C,MAAK;IAACS,UAAU;IAACC;EAAW,CAAC,GAAC;IAACD,UAAU,EAAC,EAAE;IAACC,WAAW,EAAC;EAAE,CAAC;EAC5D,MAAM,CAACC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,MAAMU,WAAW,CAACH,UAAU,EAAEC,WAAW,CAAC,CAAC;EACvE,MAAM,CAACG,GAAG,EAAEC,MAAM,CAAC,GAAGZ,QAAQ,CAACS,QAAQ,CAAC;EACxC,MAAM,CAACI,GAAG,EAAEC,MAAM,CAAC,GAAGd,QAAQ,CAAC;IAAEe,EAAE,EAAE,CAAC;IAAEC,EAAE,EAAE;EAAE,CAAC,CAAC;EAChD,MAAM,CAACC,OAAO,CAAC,GAAGjB,QAAQ,CAAC,MAAMU,WAAW,CAACH,UAAU,EAAEC,WAAW,CAAC,CAAC;EACtE,MAAM,CAACU,UAAU,CAAC,GAAGlB,QAAQ,CAAC,MAAMU,WAAW,CAACH,UAAU,EAAEC,WAAW,CAAC,CAAC;EACzE,MAAM,CAACW,YAAY,EAACC,eAAe,CAAC,GAAEpB,QAAQ,CAA6C,EAAE,CAAC;EAC9F,MAAM,CAACqB,MAAM,EAAEC,SAAS,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC;EAEvCD,SAAS,CAAC,MAAM;IACd,IAAIwB,cAAsB;IAE1B,MAAMC,IAAI,GAAGA,CAAA,KAAM;MACjB,MAAMC,SAAS,GAAGpB,YAAY,CAACqB,OAAO;MACtC,MAAMC,GAAG,GAAGrB,MAAM,CAACoB,OAAO;MAE1B,IAAID,SAAS,IAAIE,GAAG,EAAE;QACpB,MAAMC,aAAa,GAAGH,SAAS,CAACI,qBAAqB,CAAC,CAAC;QACvD,MAAMC,OAAO,GAAGH,GAAG,CAACE,qBAAqB,CAAC,CAAC;QAE3C,IAAIE,IAAI,GAAGpB,GAAG,CAACqB,CAAC,GAAGnB,GAAG,CAACE,EAAE;QACzB,IAAIkB,IAAI,GAAGtB,GAAG,CAACuB,CAAC,GAAGrB,GAAG,CAACG,EAAE;QACzB,IAAImB,KAAK,GAAGtB,GAAG,CAACE,EAAE;QAClB,IAAIqB,KAAK,GAAGvB,GAAG,CAACG,EAAE;;QAElB;QACA,IAAIe,IAAI,IAAI,CAAC,IAAIA,IAAI,GAAGD,OAAO,CAACO,KAAK,IAAIT,aAAa,CAACS,KAAK,EAAE;UAC5DF,KAAK,IAAI,CAAC,CAAC;QACb;QACA,IAAIF,IAAI,IAAI,CAAC,IAAIA,IAAI,GAAGH,OAAO,CAACQ,MAAM,IAAIV,aAAa,CAACU,MAAM,EAAE;UAC9DF,KAAK,IAAI,CAAC,CAAC;QACb;QAEAxB,MAAM,CAAC;UAAEoB,CAAC,EAAED,IAAI;UAAEG,CAAC,EAAED;QAAK,CAAC,CAAC;QAC5BnB,MAAM,CAAC;UAAEC,EAAE,EAAEoB,KAAK;UAAEnB,EAAE,EAAEoB;QAAM,CAAC,CAAC;MAClC;MAEAb,cAAc,GAAGgB,qBAAqB,CAACf,IAAI,CAAC;IAC9C,CAAC;IAEDD,cAAc,GAAGgB,qBAAqB,CAACf,IAAI,CAAC;IAC5C,OAAO,MAAMgB,oBAAoB,CAACjB,cAAc,CAAC;EACnD,CAAC,EAAE,CAACZ,GAAG,EAAEE,GAAG,CAAC,CAAC;EAEdd,SAAS,CAAC,MAAM;IACd,MAAM0C,YAAY,GAAG,CACnB,kBAAkB,EAClB,mBAAmB,EACnB,qBAAqB,CACtB;IAED,MAAMC,UAAU,GAAGC,WAAW,CAAC,MAAM;MACnC,MAAMhC,GAAG,GAAGD,WAAW,CAACH,UAAU,EAAEC,WAAW,CAAC;MAChD,MAAMoC,YAAY,GAAGH,YAAY,CAACI,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGN,YAAY,CAACO,MAAM,CAAC,CAAC;MAElF,MAAMC,QAAQ,GAAG;QACfjB,CAAC,EAAErB,GAAG,CAACqB,CAAC;QACRE,CAAC,EAAEvB,GAAG,CAACuB,CAAC;QACRgB,EAAE,EAAE7B,MAAM;QACV8B,GAAG,EAAEP;MACP,CAAC;MAEDxB,eAAe,CAAEgC,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEH,QAAQ,CAAC,CAAC;MAC9C3B,SAAS,CAAE4B,EAAE,IAAKA,EAAE,GAAG,CAAC,CAAC;IAC3B,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMG,aAAa,CAACX,UAAU,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAGN,SAAShC,WAAWA,CAAC2B,KAAY,EAACC,MAAa,EAAC;IAC9C,MAAMN,CAAC,GAAEa,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIO,MAAM,CAACC,UAAU,GAAGlB,KAAK,CAAC,CAAC;IAChE,MAAMH,CAAC,GAAGW,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIO,MAAM,CAACE,WAAW,GAAGlB,MAAM,CAAC,CAAC;IACnE,OAAO;MAACN,CAAC;MAACE;IAAC,CAAC;EACd;EAEA,oBAEEhC,OAAA;IACEuD,GAAG,EAAEpD,YAAa;IAClBqD,KAAK,EAAE;MACLrB,KAAK,EAAE,OAAO;MACdC,MAAM,EAAE,OAAO;MACfqB,eAAe,EAAE,MAAM;MACvBC,QAAQ,EAAE,QAAQ;MAClBC,QAAQ,EAAE;IACZ,CAAE;IAAAC,QAAA,gBAEF5D,OAAA;MACEuD,GAAG,EAAEnD,MAAO;MACZ6C,GAAG,EAAC,mBAAmB;MACvBY,GAAG,EAAC,UAAO;MACXL,KAAK,EAAE;QACLG,QAAQ,EAAE,UAAU;QACpBG,GAAG,EAAErD,GAAG,CAACuB,CAAC;QACV+B,IAAI,EAAEtD,GAAG,CAACqB,CAAC;QACXK,KAAK,EAAE9B,UAAU;QACjB+B,MAAM,EAAE9B;MACV;IAAE;MAAA0D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EACDlD,YAAY,CAACmD,GAAG,CAAE3C,GAAG,iBAC1BzB,OAAA;MAEEiD,GAAG,EAAExB,GAAG,CAACwB,GAAI;MACbO,KAAK,EAAE;QACLG,QAAQ,EAAE,UAAU;QACpBG,GAAG,EAAErC,GAAG,CAACO,CAAC;QACV+B,IAAI,EAAEtC,GAAG,CAACK,CAAC;QACXK,KAAK,EAAE9B,UAAU;QACjB+B,MAAM,EAAE9B;MACV;IAAE,GARGmB,GAAG,CAACuB,EAAE;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASZ,CACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAGV,CAAC;AAACjE,EAAA,CAvHID,OAAO;AAAAoE,EAAA,GAAPpE,OAAO;AAyHb,eAAeA,OAAO;AAAC,IAAAoE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}