{"ast":null,"code":"export async function calculateProofOfWork(challengeId){let difficulty=arguments.length>1&&arguments[1]!==undefined?arguments[1]:4;const prefix='0'.repeat(difficulty);const encoder=new TextEncoder();for(let nonce=0;nonce<Number.MAX_SAFE_INTEGER;nonce++){const data=encoder.encode(\"\".concat(challengeId,\":\").concat(nonce));const hashBuffer=await crypto.subtle.digest(\"SHA-256\",data);const hashArray=Array.from(new Uint8Array(hashBuffer));const hashHex=hashArray.map(b=>b.toString(16).padStart(2,'0')).join('');if(hashHex.startsWith(prefix)){return nonce.toString();}}throw new Error(\"Proof of Work not found.\");}","map":{"version":3,"names":["calculateProofOfWork","challengeId","difficulty","arguments","length","undefined","prefix","repeat","encoder","TextEncoder","nonce","Number","MAX_SAFE_INTEGER","data","encode","concat","hashBuffer","crypto","subtle","digest","hashArray","Array","from","Uint8Array","hashHex","map","b","toString","padStart","join","startsWith","Error"],"sources":["/home/hugo/Documents/4A/cyber/front_url_parser/src/utils/calculateProofOfWork.ts"],"sourcesContent":["export async function calculateProofOfWork(challengeId: string, difficulty: number = 4): Promise<string> {\n  const prefix = '0'.repeat(difficulty);\n  const encoder = new TextEncoder();\n\n  for (let nonce = 0; nonce < Number.MAX_SAFE_INTEGER; nonce++) {\n    const data = encoder.encode(`${challengeId}:${nonce}`);\n    const hashBuffer = await crypto.subtle.digest(\"SHA-256\", data);\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\n    const hashHex = hashArray.map(b => b.toString(16).padStart(2, '0')).join('');\n\n    if (hashHex.startsWith(prefix)) {\n      return nonce.toString();\n    }\n  }\n\n  throw new Error(\"Proof of Work not found.\");\n}\n"],"mappings":"AAAA,MAAO,eAAe,CAAAA,oBAAoBA,CAACC,WAAmB,CAA2C,IAAzC,CAAAC,UAAkB,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CACpF,KAAM,CAAAG,MAAM,CAAG,GAAG,CAACC,MAAM,CAACL,UAAU,CAAC,CACrC,KAAM,CAAAM,OAAO,CAAG,GAAI,CAAAC,WAAW,CAAC,CAAC,CAEjC,IAAK,GAAI,CAAAC,KAAK,CAAG,CAAC,CAAEA,KAAK,CAAGC,MAAM,CAACC,gBAAgB,CAAEF,KAAK,EAAE,CAAE,CAC5D,KAAM,CAAAG,IAAI,CAAGL,OAAO,CAACM,MAAM,IAAAC,MAAA,CAAId,WAAW,MAAAc,MAAA,CAAIL,KAAK,CAAE,CAAC,CACtD,KAAM,CAAAM,UAAU,CAAG,KAAM,CAAAC,MAAM,CAACC,MAAM,CAACC,MAAM,CAAC,SAAS,CAAEN,IAAI,CAAC,CAC9D,KAAM,CAAAO,SAAS,CAAGC,KAAK,CAACC,IAAI,CAAC,GAAI,CAAAC,UAAU,CAACP,UAAU,CAAC,CAAC,CACxD,KAAM,CAAAQ,OAAO,CAAGJ,SAAS,CAACK,GAAG,CAACC,CAAC,EAAIA,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,QAAQ,CAAC,CAAC,CAAE,GAAG,CAAC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC,CAE5E,GAAIL,OAAO,CAACM,UAAU,CAACxB,MAAM,CAAC,CAAE,CAC9B,MAAO,CAAAI,KAAK,CAACiB,QAAQ,CAAC,CAAC,CACzB,CACF,CAEA,KAAM,IAAI,CAAAI,KAAK,CAAC,0BAA0B,CAAC,CAC7C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}