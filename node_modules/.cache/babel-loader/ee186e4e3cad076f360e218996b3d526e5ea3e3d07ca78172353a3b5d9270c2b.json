{"ast":null,"code":"import{api}from'../services/api';export const incrementscore=async function(){let data=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};try{if(data&&Object.keys(data).length>0){// Si data existe et n'est pas vide, on l'envoie\nconst response=await api.post('/auth/increment-score',data);return response.data;}else{// Sinon, on fait un post sans body\nconst response=await api.post('/auth/increment-score');return response.data;}}catch(error){var _error$response;console.error(\"erreur lors de l'incrémentation du score\",error);throw((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data)||{message:\"erreur lors de l'incrémentation du score\"};}};// export const verifcaptchavalue=async (challengeid:string,answer:string,client_timestamp:string,proof_of_work:string)=>{\n//   try {\n//     const data = {\n//       challengeid,\n//       answer,\n//       client_timestamp,\n//       proof_of_work\n//     };\n//     const response = await api.post('/auth/check-human', data);\n//     return response.data;\n//   } catch (error:any) {\n//     console.error(\"Erreur lors de l'obtention du captcha\", error);\n//     throw(error.response?.data || {message: \"Erreur lors de l'obtention du captcha\"});\n//   }\n// }\nexport const checkmilestone=async()=>{try{const response=await api.get('/auth/check-milestone');return response.data;}catch(error){var _error$response2;console.error(\"Erreur lors de la vérification du jalon\",error);throw((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.data)||{message:\"Erreur lors de la vérification du jalon\"};}};","map":{"version":3,"names":["api","incrementscore","data","arguments","length","undefined","Object","keys","response","post","error","_error$response","console","message","checkmilestone","get","_error$response2"],"sources":["/home/hugo/Documents/4A/cyber/front_url_parser/src/services/servicesjeu.ts"],"sourcesContent":["import { api } from '../services/api';\n\n\nexport const incrementscore = async (data: any = {}) => {\n try {\n    if (data && Object.keys(data).length > 0) {\n      // Si data existe et n'est pas vide, on l'envoie\n      const response = await api.post('/auth/increment-score', data);\n      return response.data;\n    } else {\n      // Sinon, on fait un post sans body\n      const response = await api.post('/auth/increment-score');\n      return response.data;\n    }\n  } catch (error: any) {\n    console.error(\"erreur lors de l'incrémentation du score\", error);\n    throw error.response?.data || { message: \"erreur lors de l'incrémentation du score\" };\n  }\n};\n\n\n// export const verifcaptchavalue=async (challengeid:string,answer:string,client_timestamp:string,proof_of_work:string)=>{\n//   try {\n//     const data = {\n//       challengeid,\n//       answer,\n//       client_timestamp,\n//       proof_of_work\n//     };\n//     const response = await api.post('/auth/check-human', data);\n//     return response.data;\n//   } catch (error:any) {\n//     console.error(\"Erreur lors de l'obtention du captcha\", error);\n//     throw(error.response?.data || {message: \"Erreur lors de l'obtention du captcha\"});\n//   }\n// }\n\nexport const checkmilestone=async ()=>{\n  try {\n    const response = await api.get('/auth/check-milestone');\n    return response.data;\n  } catch (error:any) {\n    console.error(\"Erreur lors de la vérification du jalon\", error);\n    throw(error.response?.data || {message: \"Erreur lors de la vérification du jalon\"});\n  }\n}"],"mappings":"AAAA,OAASA,GAAG,KAAQ,iBAAiB,CAGrC,MAAO,MAAM,CAAAC,cAAc,CAAG,cAAAA,CAAA,CAA0B,IAAnB,CAAAC,IAAS,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CAClD,GAAI,CACD,GAAID,IAAI,EAAII,MAAM,CAACC,IAAI,CAACL,IAAI,CAAC,CAACE,MAAM,CAAG,CAAC,CAAE,CACxC;AACA,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAAR,GAAG,CAACS,IAAI,CAAC,uBAAuB,CAAEP,IAAI,CAAC,CAC9D,MAAO,CAAAM,QAAQ,CAACN,IAAI,CACtB,CAAC,IAAM,CACL;AACA,KAAM,CAAAM,QAAQ,CAAG,KAAM,CAAAR,GAAG,CAACS,IAAI,CAAC,uBAAuB,CAAC,CACxD,MAAO,CAAAD,QAAQ,CAACN,IAAI,CACtB,CACF,CAAE,MAAOQ,KAAU,CAAE,KAAAC,eAAA,CACnBC,OAAO,CAACF,KAAK,CAAC,0CAA0C,CAAEA,KAAK,CAAC,CAChE,KAAM,EAAAC,eAAA,CAAAD,KAAK,CAACF,QAAQ,UAAAG,eAAA,iBAAdA,eAAA,CAAgBT,IAAI,GAAI,CAAEW,OAAO,CAAE,0CAA2C,CAAC,CACvF,CACF,CAAC,CAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAO,MAAM,CAAAC,cAAc,CAAC,KAAAA,CAAA,GAAU,CACpC,GAAI,CACF,KAAM,CAAAN,QAAQ,CAAG,KAAM,CAAAR,GAAG,CAACe,GAAG,CAAC,uBAAuB,CAAC,CACvD,MAAO,CAAAP,QAAQ,CAACN,IAAI,CACtB,CAAE,MAAOQ,KAAS,CAAE,KAAAM,gBAAA,CAClBJ,OAAO,CAACF,KAAK,CAAC,yCAAyC,CAAEA,KAAK,CAAC,CAC/D,KAAM,EAAAM,gBAAA,CAAAN,KAAK,CAACF,QAAQ,UAAAQ,gBAAA,iBAAdA,gBAAA,CAAgBd,IAAI,GAAI,CAACW,OAAO,CAAE,yCAAyC,CAAC,CACpF,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}