{"ast":null,"code":"var _jsxFileName = \"/home/hugo/Documents/4A/cyber/front_url_parser/src/context/WebSocketContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WebSocketContext = /*#__PURE__*/createContext(undefined);\nexport const WebSocketProvider = ({\n  children\n}) => {\n  _s();\n  const socketRef = useRef(null);\n  const [userId, setUserId] = useState(null);\n  const [userIdliste, setUserIdliste] = useState([]);\n  const [_, forceUpdate] = useState(0);\n  const connect = token => {\n    if (socketRef.current) {\n      socketRef.current.close();\n    }\n    const socket = new WebSocket(`ws://localhost:8000/ws?token=${token}`);\n    socket.onopen = () => {\n      console.log('WebSocket connecté');\n    };\n    socket.onmessage = event => {\n      try {\n        const data = JSON.parse(event.data);\n        if (data.type === \"user_connected\" && data.user_id) {\n          setUserId(data.user_id);\n        }\n        if (data.type === \"user_already_connected\" && Array.isArray(data.users)) {\n          console.log('Liste des utilisateurs connectés :', data.users);\n          const ids = data.users.map(user => user.user_id);\n          setUserIdliste(ids);\n        }\n      } catch (e) {\n        console.log('Message reçu :', event.data);\n      }\n    };\n    socket.onerror = error => {\n      console.error('Erreur WebSocket :', error);\n    };\n    socket.onclose = () => {\n      console.log('WebSocket fermé');\n    };\n    socketRef.current = socket;\n    forceUpdate(x => x + 1);\n  };\n  const disconnect = () => {\n    var _socketRef$current;\n    (_socketRef$current = socketRef.current) === null || _socketRef$current === void 0 ? void 0 : _socketRef$current.close();\n    socketRef.current = null;\n    forceUpdate(x => x + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(WebSocketContext.Provider, {\n    value: {\n      socket: socketRef.current,\n      connect,\n      disconnect,\n      userId,\n      userIdliste\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(WebSocketProvider, \"t39JvtSq8lrcFertXcpV/JxtKhI=\");\n_c = WebSocketProvider;\nexport const useWebSocket = () => {\n  _s2();\n  const context = useContext(WebSocketContext);\n  if (!context) throw new Error('useWebSocket must be used within a WebSocketProvider');\n  return context;\n};\n_s2(useWebSocket, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"WebSocketProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useRef","jsxDEV","_jsxDEV","WebSocketContext","undefined","WebSocketProvider","children","_s","socketRef","userId","setUserId","userIdliste","setUserIdliste","_","forceUpdate","connect","token","current","close","socket","WebSocket","onopen","console","log","onmessage","event","data","JSON","parse","type","user_id","Array","isArray","users","ids","map","user","e","onerror","error","onclose","x","disconnect","_socketRef$current","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useWebSocket","_s2","context","Error","$RefreshReg$"],"sources":["/home/hugo/Documents/4A/cyber/front_url_parser/src/context/WebSocketContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useRef } from 'react';\n\n\n\ntype WebSocketContextType = {\n  socket: WebSocket | null;\n  connect: (token: string) => void;\n  disconnect: () => void;\n  userId: string|null;\n  userIdliste?: string[];\n};\n\nconst WebSocketContext = createContext<WebSocketContextType | undefined>(undefined);\n\n\nexport const WebSocketProvider = ({ children }: { children: React.ReactNode }) => {\n  const socketRef = useRef<WebSocket | null>(null);\n  const [userId, setUserId] = useState<string | null>(null);\n  const [userIdliste, setUserIdliste] = useState<string []>([]);\n  const [_, forceUpdate] = useState(0); \n\n  const connect = (token: string) => {\n    if (socketRef.current) {\n      socketRef.current.close();\n    }\n\n    const socket = new WebSocket(`ws://localhost:8000/ws?token=${token}`);\n\n    socket.onopen = () => {\n      console.log('WebSocket connecté');\n    };\n    socket.onmessage = (event) => {\n      try {\n        const data = JSON.parse(event.data);\n        if (data.type === \"user_connected\" && data.user_id) {\n          setUserId(data.user_id);\n        }\n        if (data.type === \"user_already_connected\" && Array.isArray(data.users)) {\n          console.log('Liste des utilisateurs connectés :', data.users);\n          const ids = data.users.map((user: { user_id: string }) => user.user_id);\n          setUserIdliste(ids);\n        }\n      } catch (e) {\n        console.log('Message reçu :', event.data);\n      }\n    };\n    socket.onerror = (error) => {\n      console.error('Erreur WebSocket :', error);\n    };\n    socket.onclose = () => {\n      console.log('WebSocket fermé');\n    };\n    socketRef.current = socket;\n    forceUpdate(x => x + 1); \n  };\n\n  const disconnect = () => {\n    socketRef.current?.close();\n    socketRef.current = null;\n    forceUpdate(x => x + 1);\n  };\n\n  return (\n    <WebSocketContext.Provider value={{ socket: socketRef.current, connect, disconnect,userId,userIdliste }}>\n      {children}\n    </WebSocketContext.Provider>\n  );\n};\n\nexport const useWebSocket = () => {\n  const context = useContext(WebSocketContext);\n  if (!context) throw new Error('useWebSocket must be used within a WebSocketProvider');\n  return context;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}